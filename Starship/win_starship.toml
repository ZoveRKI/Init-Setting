add_newline = false

format = """$os$username[ ](bg:black fg:white)${custom.path_icon}$directory${custom.separator}$git_branch$git_status$docker_context${custom.language_line}$time$line_break$character"""

right_format = """$cmd_duration"""

[os]
disabled = false
style = "bg:black fg:white"

[os.symbols]
Windows = " 󰍲 "
Ubuntu = " 󰕈 "
SUSE = "  "
Raspbian = " 󰐿 "
Mint = " 󰣭 "
Macos = " 󰀵 "
Manjaro = "  "
Linux = " 󰌽 "
Gentoo = " 󰣨 "
Fedora = " 󰣛 "
Alpine = "  "
Amazon = "  "
Android = "  "
Arch = " 󰣇 "
Artix = " 󰣇 "
CentOS = "  "
Debian = " 󰣚 "
Redhat = " 󱄛 "
RedHatEnterprise = " 󱄛 "

[character]
success_symbol = '[❯](bold green)'
error_symbol = '[✗](bold red)'

[directory]
style = "bold bg:black fg:blue"
format = "[$path ]($style)"
truncation_length = 10
truncate_to_repo = false

[custom.path_icon]
command = """
if ($PWD.Path -eq $HOME.Path) {
    Write-Output ''
} else {
    Write-Output ''
}
"""
style = "bg:black fg:white"

[custom.separator]
command = """
if ((git rev-parse --is-inside-work-tree 2>$null) -or $env:DOCKER_HOST) {
    Write-Output ''
}
"""
style = "bg:black fg:white"

[git_branch]
symbol = ""
style = "bold bg:black fg:purple"
format = '[$symbol$branch]($style)'

[git_status]
style = "bold bg:black fg:purple"
format = '[\[$all_status$ahead_behind\]]($style)'

[custom.language_line]
command = """
$output = "\n"
if (Test-Path *.java -ErrorAction SilentlyContinue -or Test-Path pom.xml -ErrorAction SilentlyContinue -or Test-Path build.gradle -ErrorAction SilentlyContinue) {
    $output += (starship module java)
}
if (Test-Path *.py -ErrorAction SilentlyContinue -or Test-Path requirements.txt -ErrorAction SilentlyContinue -or Test-Path setup.py -ErrorAction SilentlyContinue) {
    $output += (starship module python)
}
if (Test-Path *.php -ErrorAction SilentlyContinue -or Test-Path composer.json -ErrorAction SilentlyContinue) {
    $output += (starship module php)
}
if ($output -ne "") {
    Write-Output "$output"
}
Exit 0
"""
style = "fg:black"

[java]
symbol = ""
format = '[$symbol$version](bold bright-red) '

[python]
symbol = ""
format = '[$symbol$version](bright-cyan) '

[cmd_duration]
min_time = 100
show_milliseconds = true
style = 'bg:black fg:yellow'
format = '[](fg:black)[ $duration]($style)'

